{"version":3,"sources":["webpack:///src/components/regForm.vue","webpack:///./src/components/regForm.vue?321d","webpack:///./src/components/regForm.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a6fd","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["regForm","name","data","surname","secondname","birthday","phone","gender","clientsGroup","clientsGroupSelected","doctor","smsMailing","postIndex","country","region","city","street","houseNumber","passportType","passportSerial","passportNumber","passportIssued","passportDate","agreement","clientAdded","validations","required","validators","maxLength","Object","alpha","val","test","minLength","betha","methods","reloadPage","window","location","reload","components_regForm","render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","_v","directives","rawName","value","$v","expression","modifiers","trim","class","incorrect-field","$error","correct-field","attrs","type","placeholder","domProps","on","input","$event","target","composing","$set","blur","$forceUpdate","$invalid","_e","_s","$params","max","$model","onfocus","min","change","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","_value","multiple","disabled","id","readonly","length","indexOf","push","splice","hidden","click","checked","isArray","_i","$$a","$$el","$$c","$$i","concat","slice","for","staticStyle","margin-top","staticRenderFns","src_components_regForm","__webpack_require__","normalizeComponent","App","components","selectortype_template_index_0_src_App","src_App","App_normalizeComponent","ssrContext","Vue","use","Vuelidate","config","productionTip","component","template","el","devtools"],"mappings":"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","file":"static/js/app.5b3dec08687e86b9580f.js","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <form>\r\n            <div>\r\n                <h1>Заполните форму</h1>\r\n            </div>\r\n            <div>\r\n                <h2>Основная информация:</h2>\r\n            </div>\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\"\r\n                    :class=\"{ 'incorrect-field': $v.name.$error || agreement === true && !$v.name.required, 'correct-field': $v.name.required }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Имя*\" \r\n                    v-model.trim=\"$v.name.$model\"\r\n                >\r\n                <div>\r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.name.$error || agreement === true && $v.$invalid === true\">\r\n                        <template v-if=\"!$v.name.required\">\r\n                            Поле обязательно для заполнения\r\n                        </template>\r\n                        <template v-else-if=\"!$v.name.alpha\">\r\n                            Поле должно содержать только буквы\r\n                        </template>\r\n                        <template v-else-if=\"!$v.name.maxLength\">\r\n                            Максимальная длинна поля - {{ $v.name.$params.maxLength.max }} символов\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.surname.$error || agreement === true && !$v.surname.required, 'correct-field': $v.surname.required }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Фамилия*\" \r\n                    v-model.trim=\"$v.surname.$model\"\r\n                >\r\n                <div>\r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.surname.$error || agreement === true && $v.$invalid === true\">\r\n                        <template v-if=\"!$v.surname.required\">\r\n                            Поле обязательно для заполнения\r\n                        </template>\r\n                        <template v-else-if=\"!$v.surname.maxLength\">\r\n                            Длина поля не должна превышать {{ $v.surname.$params.maxLength.max }} символов\r\n                        </template>\r\n                        <template v-else-if=\"!$v.surname.alpha\">\r\n                            Поле должно содержать только буквы\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.secondname.$error,  'correct-field': $v.secondname.$model }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Отчество\" \r\n                    v-model.trim=\"$v.secondname.$model\"\r\n                >\r\n                <div>            \r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.secondname.$error\">\r\n                        <template v-if=\"!$v.secondname.maxLength\">\r\n                            Длина поля не должна превышать {{ $v.secondname.$params.maxLength.max }} символов\r\n                        </template>\r\n                        <template v-else-if=\"!$v.secondname.alpha\">\r\n                            Поле должно содержать только буквы\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.birthday === null || agreement === true && !$v.birthday.required, 'correct-field': $v.birthday.required }\"\r\n                    type=\"text\"\r\n                    placeholder=\"Дата рождения*\"\r\n                    onfocus=\"this.type='date'\"\r\n                    v-model.trim=\"$v.birthday.$model\"\r\n                >\r\n                <div>\r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.birthday.$error || agreement === true && $v.$invalid === true\">\r\n                        <template v-if=\"!$v.birthday.required\">\r\n                            Поле обязательно для заполнения\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.phone.$error || agreement === true && !$v.phone.required, 'correct-field': $v.phone.required }\" \r\n                    type=\"tel\" \r\n                    placeholder=\"Номер телефона*\" \r\n                    v-model.trim=\"$v.phone.$model\"\r\n                >\r\n                <div>\r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.phone.$error || agreement === true && $v.$invalid === true\">\r\n                        <template v-if=\"!$v.phone.required\">\r\n                            Поле обязательно для заполнения\r\n                        </template>\r\n                        <template v-else-if=\"!$v.phone.alpha\">\r\n                            Поле должно содержать только цифры\r\n                        </template>\r\n                        <template v-else-if=\"!$v.phone.betha\">\r\n                            Номер должен начинаться с 7\r\n                        </template>\r\n                        <template v-else-if=\"!$v.phone.maxLength\">\r\n                            Не больше {{ $v.phone.$params.maxLength.max }} символов\r\n                        </template>\r\n                        <template v-else-if=\"!$v.phone.minLength\">\r\n                            Не меньше {{ $v.phone.$params.minLength.min }} символов\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <select\r\n                    class=\"form-field\"\r\n                    :class=\"{ 'correct-field': gender !== '' }\"  \r\n                    v-model=\"gender\"\r\n                >\r\n                    <option disabled value=\"\">Пол</option>\r\n                    <option>Мужской</option>\r\n                    <option>Женский</option>\r\n                </select>\r\n            </div>\r\n            \r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    id=\"hidden-choise\"\r\n                    class=\"form-field\"  \r\n                    type=\"text\"\r\n                    placeholder=\"Группа клиентов*\"\r\n                    readonly\r\n                    v-model.trim=\"clientsGroupSelected\"\r\n                >     \r\n                <select\r\n                    class=\"form-field\"\r\n                    :class=\"{ \r\n                        'incorrect-field': clientsGroupSelected.length === 0 && clientsGroup !== '' || agreement === true && clientsGroupSelected.length === 0, \r\n                        'correct-field': clientsGroupSelected.length \r\n                    }\"\r\n                    v-model=\"clientsGroup\"\r\n                    v-on:change=\"clientsGroupSelected.indexOf($v.clientsGroup.$model) === -1 \r\n                        ? clientsGroupSelected.push($v.clientsGroup.$model) \r\n                        : clientsGroupSelected.splice(clientsGroupSelected.indexOf($v.clientsGroup.$model), 1)\"\r\n                >\r\n                    <option disabled value=\"\">Группа клиентов*</option>\r\n                    <option>VIP</option>\r\n                    <option>Проблемные</option>\r\n                    <option>ОМС</option>\r\n                </select>\r\n                <span \r\n                    class=\"material-icons delete-array-icon\" \r\n                    :class=\"{ 'hidden': clientsGroupSelected.length === 0 }\" \r\n                    v-on:click=\"clientsGroupSelected.splice(0, clientsGroupSelected.length)\"\r\n                    >\r\n                    clear\r\n                </span>\r\n                <div>\r\n                    <span \r\n                        class=\"incorrect-field-msg\" \r\n                        v-if=\"clientsGroupSelected.length === 0 && clientsGroup !== '' || agreement === true && clientsGroupSelected.length === 0\"\r\n                    >\r\n                        Поле обязательно для заполнения\r\n                    </span>\r\n                </div>\r\n            </div> \r\n\r\n            <div class=\"empty-fields\">\r\n                <select\r\n                    class=\"form-field\"\r\n                    :class=\"{ 'correct-field': doctor !== '' }\"  \r\n                    v-model=\"doctor\"\r\n                >\r\n                    <option disabled value=\"\">Лечащий врач</option>\r\n                    <option>Иванов</option>\r\n                    <option>Захаров</option>\r\n                    <option>Чернышева</option>\r\n                </select>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div class=\"empty-fields check-agreement\">\r\n                <input type=\"checkbox\" id=\"smsMailing\" v-model=\"smsMailing\" />\r\n                <label for=\"smsMailing\">Согласие на СМС-уведомления</label>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>Адрес:</h2>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.postIndex.$error,  'correct-field': $v.postIndex.$model }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Почтовый индекс\" \r\n                    v-model.trim=\"$v.postIndex.$model\"\r\n                >\r\n                <div>            \r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.postIndex.$error\">\r\n                        <template v-if=\"!$v.postIndex.alpha\">\r\n                            Поле должно содержать только цифры\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.country.$error,  'correct-field': $v.country.$model }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Страна\" \r\n                    v-model.trim=\"$v.country.$model\"\r\n                > \r\n                <div>           \r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.country.$error\">\r\n                        <template v-if=\"!$v.country.alpha\">\r\n                            Поле должно содержать только буквы\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.region.$error,  'correct-field': $v.region.$model }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Область\" \r\n                    v-model.trim=\"$v.region.$model\"\r\n                >\r\n                <div>            \r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.region.$error\">\r\n                        <template v-if=\"!$v.region.alpha\">\r\n                            Поле должно содержать только буквы\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.city.$error || agreement === true && !$v.city.required,  'correct-field': $v.city.required }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Город*\" \r\n                    v-model.trim=\"$v.city.$model\"\r\n                > \r\n                <div>           \r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.city.$error || agreement === true && !$v.city.required\">\r\n                        <template v-if=\"!$v.city.required\">\r\n                            Поле обязательно для заполнения\r\n                        </template>\r\n                        <template v-else-if=\"!$v.city.alpha\">\r\n                            Поле должно содержать только буквы\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'correct-field': $v.street }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Улица\" \r\n                    v-model.trim=\"$v.street\"\r\n                >\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'correct-field': $v.houseNumber }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Номер дома\" \r\n                    v-model.trim=\"$v.houseNumber\"\r\n                >\r\n            </div>\r\n\r\n            <div>\r\n                <h2>Документ удостоверяющий личность:</h2>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <select\r\n                    class=\"form-field\"\r\n                    :class=\"{ 'incorrect-field': agreement === true && passportType === '', 'correct-field': passportType !== '' }\"  \r\n                    v-model=\"passportType\"\r\n                >\r\n                    <option disabled value=\"\">Тип документа*</option>\r\n                    <option>Паспорт</option>\r\n                    <option>Свидетельство о рождении</option>\r\n                    <option>Вод. удостоверение</option>\r\n                    <option>Военный билет</option>\r\n                </select>\r\n                <div>\r\n                    <span class=\"incorrect-field-msg\" v-if=\" agreement === true && passportType === '' \">Поле обязательно для заполнения</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.passportSerial.$error,  'correct-field': $v.passportSerial.$model }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Серия\" \r\n                    v-model.trim=\"$v.passportSerial.$model\"\r\n                >     \r\n                <div>       \r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.passportSerial.$error\">\r\n                        <template v-if=\"!$v.passportSerial.alpha\">\r\n                            Поле должно содержать только цифры\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.passportNumber.$error,  'correct-field': $v.passportNumber.$model }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Номер\" \r\n                    v-model.trim=\"$v.passportNumber.$model\"\r\n                >  \r\n                <div>          \r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.passportNumber.$error\">\r\n                        <template v-if=\"!$v.passportNumber.alpha\">\r\n                            Поле должно содержать только цифры\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.passportIssued.$error,  'correct-field': $v.passportIssued.$model }\" \r\n                    type=\"text\" \r\n                    placeholder=\"Кем выдан\" \r\n                    v-model.trim=\"$v.passportIssued.$model\"\r\n                >   \r\n                <div>         \r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.passportIssued.$error\">\r\n                        <template v-if=\"!$v.passportIssued.alpha\">\r\n                            Поле должно содержать только буквы\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"empty-fields\">\r\n                <input \r\n                    class=\"form-field\" \r\n                    :class=\"{ 'incorrect-field': $v.passportDate === null || agreement === true && !$v.passportDate.required, 'correct-field': $v.passportDate.required }\"\r\n                    type=\"text\"\r\n                    placeholder=\"Дата выдачи*\"\r\n                    onfocus=\"this.type='date'\"\r\n                    v-model.trim=\"$v.passportDate.$model\"\r\n                >\r\n                <div>\r\n                    <span class=\"incorrect-field-msg\" v-if=\"$v.passportDate.$error || agreement === true && !$v.passportDate.required\">\r\n                        <template v-if=\"!$v.passportDate.required\">\r\n                            Поле обязательно для заполнения\r\n                        </template>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <br />\r\n            <div class=\"empty-fields check-agreement\">\r\n                <input type=\"checkbox\" id=\"agreement\" v-model=\"agreement\" />\r\n                <label for=\"agreement\">Согласие на обработку персональных данных*</label>\r\n            </div>\r\n            \r\n            <div class=\"success-block\" :class=\"{ 'disabled': !clientAdded }\">\r\n                <span>Клиент успешно создан!</span><br />\r\n                <span>Добавить нового?</span><br />\r\n                <button style=\"margin-top: 15px\" type=\"button\" @click=\"reloadPage()\">Добавить</button>\r\n            </div>\r\n\r\n            <br />\r\n            <button :disabled=\"$v.$invalid || agreement === false\" v-if=\"!clientAdded\" @click=\"clientAdded = true\">Отправить форму</button>\r\n            <br />\r\n            <br />\r\n            <span v-if=\"!clientAdded\"> * - поля обязательные для заполнения</span>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { required, maxLength, minLength  } from 'vuelidate/lib/validators';\r\n\r\nexport default {\r\n    name: 'regForm',\r\n    data () {\r\n        return {\r\n            name: null,\r\n            surname: null,\r\n            secondname: null,\r\n            birthday: null,\r\n            phone: null,\r\n            gender: '',\r\n            clientsGroup: '',\r\n            clientsGroupSelected: [],\r\n            doctor: '',\r\n            smsMailing: false,\r\n            postIndex: null,\r\n            country: null,\r\n            region: null,\r\n            city: null,\r\n            street: null,\r\n            houseNumber: null,\r\n            passportType: '',\r\n            passportSerial: null,\r\n            passportNumber: null,\r\n            passportIssued: null,\r\n            passportDate: null,\r\n            agreement: false,\r\n            clientAdded: false\r\n        }\r\n    },\r\n\r\n    validations: {\r\n        name: {\r\n            required,\r\n            maxLength: maxLength(10),\r\n            alpha: val => /^[а-яёa-z]*$/i.test(val)\r\n        },\r\n        surname: {\r\n            required,\r\n            maxLength: maxLength(10),\r\n            alpha: val => /^[а-яёa-z]*$/i.test(val)\r\n        },\r\n        secondname: {\r\n            maxLength: maxLength(10),\r\n            alpha: val => /^[а-яёa-z]*$/i.test(val) || val === null\r\n        },\r\n        birthday: {\r\n            required\r\n        },\r\n        phone: {\r\n            required,\r\n            minLength: minLength(11),\r\n            maxLength: maxLength(11),\r\n            alpha: val => /^[0-9]*$/i.test(val),\r\n            betha: val => val[0] === '7'\r\n        },\r\n        clientsGroup: {\r\n            required\r\n        },\r\n        clientsGroupSelected: {\r\n            required\r\n        },\r\n        postIndex: {\r\n            alpha: val => /^[0-9]*$/i.test(val) || val === null\r\n        },\r\n        country: {\r\n            alpha: val => /^[а-яёa-z]*$/i.test(val) || val === null\r\n        },\r\n        region: {\r\n            alpha: val => /^[а-яёa-z]*$/i.test(val) || val === null\r\n        },\r\n        city: {\r\n            required,\r\n            alpha: val => /^[а-яёa-z]*$/i.test(val)\r\n        },\r\n        passportSerial: {\r\n            alpha: val => /^[0-9]*$/i.test(val) || val === null\r\n        },\r\n        passportNumber: {\r\n            alpha: val => /^[0-9]*$/i.test(val) || val === null\r\n        },\r\n        passportIssued: {\r\n            alpha: val => /^[а-яёa-z]*$/i.test(val) || val === null\r\n        },\r\n        passportDate: {\r\n            required\r\n        },\r\n        passportType: {\r\n            required\r\n        }\r\n    },\r\n    methods: {\r\n        reloadPage() {\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/regForm.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('form',[_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.name.$model),expression:\"$v.name.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.name.$error || _vm.agreement === true && !_vm.$v.name.required, 'correct-field': _vm.$v.name.required },attrs:{\"type\":\"text\",\"placeholder\":\"Имя*\"},domProps:{\"value\":(_vm.$v.name.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.name, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.name.$error || _vm.agreement === true && _vm.$v.$invalid === true)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.name.required)?[_vm._v(\"\\n                        Поле обязательно для заполнения\\n                    \")]:(!_vm.$v.name.alpha)?[_vm._v(\"\\n                        Поле должно содержать только буквы\\n                    \")]:(!_vm.$v.name.maxLength)?[_vm._v(\"\\n                        Максимальная длинна поля - \"+_vm._s(_vm.$v.name.$params.maxLength.max)+\" символов\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.surname.$model),expression:\"$v.surname.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.surname.$error || _vm.agreement === true && !_vm.$v.surname.required, 'correct-field': _vm.$v.surname.required },attrs:{\"type\":\"text\",\"placeholder\":\"Фамилия*\"},domProps:{\"value\":(_vm.$v.surname.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.surname, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.surname.$error || _vm.agreement === true && _vm.$v.$invalid === true)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.surname.required)?[_vm._v(\"\\n                        Поле обязательно для заполнения\\n                    \")]:(!_vm.$v.surname.maxLength)?[_vm._v(\"\\n                        Длина поля не должна превышать \"+_vm._s(_vm.$v.surname.$params.maxLength.max)+\" символов\\n                    \")]:(!_vm.$v.surname.alpha)?[_vm._v(\"\\n                        Поле должно содержать только буквы\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.secondname.$model),expression:\"$v.secondname.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.secondname.$error,  'correct-field': _vm.$v.secondname.$model },attrs:{\"type\":\"text\",\"placeholder\":\"Отчество\"},domProps:{\"value\":(_vm.$v.secondname.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.secondname, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.secondname.$error)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.secondname.maxLength)?[_vm._v(\"\\n                        Длина поля не должна превышать \"+_vm._s(_vm.$v.secondname.$params.maxLength.max)+\" символов\\n                    \")]:(!_vm.$v.secondname.alpha)?[_vm._v(\"\\n                        Поле должно содержать только буквы\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.birthday.$model),expression:\"$v.birthday.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.birthday === null || _vm.agreement === true && !_vm.$v.birthday.required, 'correct-field': _vm.$v.birthday.required },attrs:{\"type\":\"text\",\"placeholder\":\"Дата рождения*\",\"onfocus\":\"this.type='date'\"},domProps:{\"value\":(_vm.$v.birthday.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.birthday, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.birthday.$error || _vm.agreement === true && _vm.$v.$invalid === true)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.birthday.required)?[_vm._v(\"\\n                        Поле обязательно для заполнения\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.phone.$model),expression:\"$v.phone.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.phone.$error || _vm.agreement === true && !_vm.$v.phone.required, 'correct-field': _vm.$v.phone.required },attrs:{\"type\":\"tel\",\"placeholder\":\"Номер телефона*\"},domProps:{\"value\":(_vm.$v.phone.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.phone, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.phone.$error || _vm.agreement === true && _vm.$v.$invalid === true)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.phone.required)?[_vm._v(\"\\n                        Поле обязательно для заполнения\\n                    \")]:(!_vm.$v.phone.alpha)?[_vm._v(\"\\n                        Поле должно содержать только цифры\\n                    \")]:(!_vm.$v.phone.betha)?[_vm._v(\"\\n                        Номер должен начинаться с 7\\n                    \")]:(!_vm.$v.phone.maxLength)?[_vm._v(\"\\n                        Не больше \"+_vm._s(_vm.$v.phone.$params.maxLength.max)+\" символов\\n                    \")]:(!_vm.$v.phone.minLength)?[_vm._v(\"\\n                        Не меньше \"+_vm._s(_vm.$v.phone.$params.minLength.min)+\" символов\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gender),expression:\"gender\"}],staticClass:\"form-field\",class:{ 'correct-field': _vm.gender !== '' },on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.gender=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"Пол\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Мужской\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Женский\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.clientsGroupSelected),expression:\"clientsGroupSelected\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",attrs:{\"id\":\"hidden-choise\",\"type\":\"text\",\"placeholder\":\"Группа клиентов*\",\"readonly\":\"\"},domProps:{\"value\":(_vm.clientsGroupSelected)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.clientsGroupSelected=$event.target.value.trim()},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.clientsGroup),expression:\"clientsGroup\"}],staticClass:\"form-field\",class:{ \n                    'incorrect-field': _vm.clientsGroupSelected.length === 0 && _vm.clientsGroup !== '' || _vm.agreement === true && _vm.clientsGroupSelected.length === 0, \n                    'correct-field': _vm.clientsGroupSelected.length \n                },on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.clientsGroup=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){_vm.clientsGroupSelected.indexOf(_vm.$v.clientsGroup.$model) === -1 \n                    ? _vm.clientsGroupSelected.push(_vm.$v.clientsGroup.$model) \n                    : _vm.clientsGroupSelected.splice(_vm.clientsGroupSelected.indexOf(_vm.$v.clientsGroup.$model), 1)}]}},[_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"Группа клиентов*\")]),_vm._v(\" \"),_c('option',[_vm._v(\"VIP\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Проблемные\")]),_vm._v(\" \"),_c('option',[_vm._v(\"ОМС\")])]),_vm._v(\" \"),_c('span',{staticClass:\"material-icons delete-array-icon\",class:{ 'hidden': _vm.clientsGroupSelected.length === 0 },on:{\"click\":function($event){return _vm.clientsGroupSelected.splice(0, _vm.clientsGroupSelected.length)}}},[_vm._v(\"\\n                clear\\n            \")]),_vm._v(\" \"),_c('div',[(_vm.clientsGroupSelected.length === 0 && _vm.clientsGroup !== '' || _vm.agreement === true && _vm.clientsGroupSelected.length === 0)?_c('span',{staticClass:\"incorrect-field-msg\"},[_vm._v(\"\\n                    Поле обязательно для заполнения\\n                \")]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.doctor),expression:\"doctor\"}],staticClass:\"form-field\",class:{ 'correct-field': _vm.doctor !== '' },on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.doctor=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"Лечащий врач\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Иванов\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Захаров\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Чернышева\")])])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields check-agreement\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.smsMailing),expression:\"smsMailing\"}],attrs:{\"type\":\"checkbox\",\"id\":\"smsMailing\"},domProps:{\"checked\":Array.isArray(_vm.smsMailing)?_vm._i(_vm.smsMailing,null)>-1:(_vm.smsMailing)},on:{\"change\":function($event){var $$a=_vm.smsMailing,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.smsMailing=$$a.concat([$$v]))}else{$$i>-1&&(_vm.smsMailing=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.smsMailing=$$c}}}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"smsMailing\"}},[_vm._v(\"Согласие на СМС-уведомления\")])]),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.postIndex.$model),expression:\"$v.postIndex.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.postIndex.$error,  'correct-field': _vm.$v.postIndex.$model },attrs:{\"type\":\"text\",\"placeholder\":\"Почтовый индекс\"},domProps:{\"value\":(_vm.$v.postIndex.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.postIndex, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.postIndex.$error)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.postIndex.alpha)?[_vm._v(\"\\n                        Поле должно содержать только цифры\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.country.$model),expression:\"$v.country.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.country.$error,  'correct-field': _vm.$v.country.$model },attrs:{\"type\":\"text\",\"placeholder\":\"Страна\"},domProps:{\"value\":(_vm.$v.country.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.country, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.country.$error)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.country.alpha)?[_vm._v(\"\\n                        Поле должно содержать только буквы\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.region.$model),expression:\"$v.region.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.region.$error,  'correct-field': _vm.$v.region.$model },attrs:{\"type\":\"text\",\"placeholder\":\"Область\"},domProps:{\"value\":(_vm.$v.region.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.region, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.region.$error)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.region.alpha)?[_vm._v(\"\\n                        Поле должно содержать только буквы\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.city.$model),expression:\"$v.city.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.city.$error || _vm.agreement === true && !_vm.$v.city.required,  'correct-field': _vm.$v.city.required },attrs:{\"type\":\"text\",\"placeholder\":\"Город*\"},domProps:{\"value\":(_vm.$v.city.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.city, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.city.$error || _vm.agreement === true && !_vm.$v.city.required)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.city.required)?[_vm._v(\"\\n                        Поле обязательно для заполнения\\n                    \")]:(!_vm.$v.city.alpha)?[_vm._v(\"\\n                        Поле должно содержать только буквы\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.street),expression:\"$v.street\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'correct-field': _vm.$v.street },attrs:{\"type\":\"text\",\"placeholder\":\"Улица\"},domProps:{\"value\":(_vm.$v.street)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v, \"street\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.houseNumber),expression:\"$v.houseNumber\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'correct-field': _vm.$v.houseNumber },attrs:{\"type\":\"text\",\"placeholder\":\"Номер дома\"},domProps:{\"value\":(_vm.$v.houseNumber)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v, \"houseNumber\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.passportType),expression:\"passportType\"}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.agreement === true && _vm.passportType === '', 'correct-field': _vm.passportType !== '' },on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.passportType=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"Тип документа*\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Паспорт\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Свидетельство о рождении\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Вод. удостоверение\")]),_vm._v(\" \"),_c('option',[_vm._v(\"Военный билет\")])]),_vm._v(\" \"),_c('div',[( _vm.agreement === true && _vm.passportType === '' )?_c('span',{staticClass:\"incorrect-field-msg\"},[_vm._v(\"Поле обязательно для заполнения\")]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.passportSerial.$model),expression:\"$v.passportSerial.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.passportSerial.$error,  'correct-field': _vm.$v.passportSerial.$model },attrs:{\"type\":\"text\",\"placeholder\":\"Серия\"},domProps:{\"value\":(_vm.$v.passportSerial.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.passportSerial, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.passportSerial.$error)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.passportSerial.alpha)?[_vm._v(\"\\n                        Поле должно содержать только цифры\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.passportNumber.$model),expression:\"$v.passportNumber.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.passportNumber.$error,  'correct-field': _vm.$v.passportNumber.$model },attrs:{\"type\":\"text\",\"placeholder\":\"Номер\"},domProps:{\"value\":(_vm.$v.passportNumber.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.passportNumber, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.passportNumber.$error)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.passportNumber.alpha)?[_vm._v(\"\\n                        Поле должно содержать только цифры\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.passportIssued.$model),expression:\"$v.passportIssued.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.passportIssued.$error,  'correct-field': _vm.$v.passportIssued.$model },attrs:{\"type\":\"text\",\"placeholder\":\"Кем выдан\"},domProps:{\"value\":(_vm.$v.passportIssued.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.passportIssued, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.passportIssued.$error)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.passportIssued.alpha)?[_vm._v(\"\\n                        Поле должно содержать только буквы\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model.trim\",value:(_vm.$v.passportDate.$model),expression:\"$v.passportDate.$model\",modifiers:{\"trim\":true}}],staticClass:\"form-field\",class:{ 'incorrect-field': _vm.$v.passportDate === null || _vm.agreement === true && !_vm.$v.passportDate.required, 'correct-field': _vm.$v.passportDate.required },attrs:{\"type\":\"text\",\"placeholder\":\"Дата выдачи*\",\"onfocus\":\"this.type='date'\"},domProps:{\"value\":(_vm.$v.passportDate.$model)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.$v.passportDate, \"$model\", $event.target.value.trim())},\"blur\":function($event){return _vm.$forceUpdate()}}}),_vm._v(\" \"),_c('div',[(_vm.$v.passportDate.$error || _vm.agreement === true && !_vm.$v.passportDate.required)?_c('span',{staticClass:\"incorrect-field-msg\"},[(!_vm.$v.passportDate.required)?[_vm._v(\"\\n                        Поле обязательно для заполнения\\n                    \")]:_vm._e()],2):_vm._e()])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"empty-fields check-agreement\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.agreement),expression:\"agreement\"}],attrs:{\"type\":\"checkbox\",\"id\":\"agreement\"},domProps:{\"checked\":Array.isArray(_vm.agreement)?_vm._i(_vm.agreement,null)>-1:(_vm.agreement)},on:{\"change\":function($event){var $$a=_vm.agreement,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.agreement=$$a.concat([$$v]))}else{$$i>-1&&(_vm.agreement=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.agreement=$$c}}}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"agreement\"}},[_vm._v(\"Согласие на обработку персональных данных*\")])]),_vm._v(\" \"),_c('div',{staticClass:\"success-block\",class:{ 'disabled': !_vm.clientAdded }},[_c('span',[_vm._v(\"Клиент успешно создан!\")]),_c('br'),_vm._v(\" \"),_c('span',[_vm._v(\"Добавить нового?\")]),_c('br'),_vm._v(\" \"),_c('button',{staticStyle:{\"margin-top\":\"15px\"},attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.reloadPage()}}},[_vm._v(\"Добавить\")])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),(!_vm.clientAdded)?_c('button',{attrs:{\"disabled\":_vm.$v.$invalid || _vm.agreement === false},on:{\"click\":function($event){_vm.clientAdded = true}}},[_vm._v(\"Отправить форму\")]):_vm._e(),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('br'),_vm._v(\" \"),(!_vm.clientAdded)?_c('span',[_vm._v(\" * - поля обязательные для заполнения\")]):_vm._e()])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"Заполните форму\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',[_vm._v(\"Основная информация:\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',[_vm._v(\"Адрес:\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',[_vm._v(\"Документ удостоверяющий личность:\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-22f20f23\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/regForm.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./regForm.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./regForm.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-22f20f23\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./regForm.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/regForm.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <regForm/>\n  </div>\n</template>\n\n<script>\nimport regForm from './components/regForm'\n\nimport './css/styles.css'\n\nexport default {\n  name: 'App',\n  components: {\n    regForm\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('regForm')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-119528c9\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-119528c9\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-119528c9\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport App from './App'\n\nimport Vuelidate from 'vuelidate'\n\nVue.use(Vuelidate)\n\nVue.config.productionTip = false\n\nVue.component(\"modal\", {\n  template: \"#modal-template\"\n});\n\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n})\n\nVue.config.devtools = true\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}